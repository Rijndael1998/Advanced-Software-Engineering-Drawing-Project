<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP+AAAL/AIACAAAAAgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAgIAIMxQPMi4UDzJQICAQ/wCAAgAA
        AAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/gAACqlUqDGtKUM9PND3/MRAN/y4O
        DvcqERnDJRAabioVIBgAAAACAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP///wJWPkY+gEg5/W5D
        Lf9bMCD/UCEV/zESEv8rFRv/KRIa9SYJFKMlCBU+KioqBgAAAAIAAAAAAAAAAoD/AAKA/wAC/4AAAv//
        /wL///8CAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA////Akwz
        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
        AAD//AAD//wKB///ng////4f//////////8=
</value>
  </data>
</root>